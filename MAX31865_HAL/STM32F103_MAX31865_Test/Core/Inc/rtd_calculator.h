/**
 ******************************************************************************
 *  @file rtd_calculator.h
 *  @brief Калькулятор: термопреобразователи сопротивления из платины,
 *  меди и никеля (ГОСТ 6651-2009)
 *  @author Волков Олег
 *  @date 23.07.2023
 ******************************************************************************
 * @attention
 *
 * Расчеты ведутся согласно ГОСТ 6651-2009
 * Поддерживаются следующие ТС:
 *  - Pt100 (385)
 *  - Pt500 (385)
 *  - Pt1000 (385)
 *  - 50П (391)
 *  - 100П (391)
 *  - 50М (428)
 *  - 100М (428)
 *  - 100Н (617)
 *  - 500Н (617)
 *  - 1000Н (617)
 *
 * Разрешение:
 *  - Платиновые ТС и ЧЭ: от -200 °C до 850 °С
 *  - Медные ТС и ЧЭ: от -180 °C до 200 °С
 *  - Никелевые ТС и ЧЭ: от -60 °C до 180 °С
 * Диапазон сопротивлений:
 *  - Pt100: от 18.52 Ом до 390.48 Ом
 *  - Pt500: от 92.60 Ом до 1952.41 Ом
 *  - Pt1000: от 185.20 Ом до 3904.81 Ом
 *  - 50П: от 8.62 Ом до 197.58 Ом
 *  - 100П: от 17.24 Ом до 395.16 Ом
 *  - 50М: от 10.26 Ом до 92.80 Ом
 *  - 100М: от 20.53 Ом до 185.60 Ом
 *  - 100Н: от 69.45 Ом до 223.21 Ом
 *  - 500Н: от 347.27 Ом до 1116.03 Ом
 *  - 1000Н: от 694.54 Ом до 2232.06 Ом
 *
 *  ГОСТ: https://docs.cntd.ru/document/1200082733
 *  GitHub: https://github.com/Solderingironspb
 *  Моя программа для ПК для расчета CRC-8, CRC-16, CRC-32 + мини-программы(Данный калькулятор там тоже есть):
 *  https://github.com/Solderingironspb/CRC-Calculator-by-Solderingiron/tree/main
 ******************************************************************************
 */
#include <stdint.h>
#include <math.h>

enum {
	PT_385, //Платина
	PT_391, //Платина
	M_428,  //Медь
	N_617  //Никель
};

/*-----------Коэффициенты из ГОСТ 6651-2009(Платиновые ТС И ЧЭ, 0.00385°С^-1)---------*/
#define PT50_R0 (double)50.0
#define PT100_R0 (double)100.0
#define PT500_R0 (double)500.0
#define PT1000_R0 (double)1000.0
#define PT_A_385 (double)0.0039083
#define PT_B_385 (double)-0.0000005775
#define PT_C_385 (double)-0.000000000004183
/*-----------Коэффициенты из ГОСТ 6651-2009(Платиновые ТС И ЧЭ, 0.00385°С^-1)---------*/

/*-----------Коэффициенты из ГОСТ 6651-2009(Платиновые ТС и ЧЭ, 0,00391°С^-1---------*/
#define PT_A_391 (double)0.003969
#define PT_B_391 (double)-0.0000005841
#define PT_C_391 (double)-0.00000000000433
/*-----------Коэффициенты из ГОСТ 6651-2009(Платиновые ТС и ЧЭ, 0,00391°С^-1)---------*/

/*-----------Коэффициенты из ГОСТ 6651-2009(Медные ТС и ЧЭ, 0,00428°С^-1)---------*/
#define M50_R0 (double)50.0
#define M100_R0 (double)100.0
#define M_A_428 (double)0.00428
#define M_B_428 (double)-0.00000062032
#define M_C_428 (double)0.00000000085154
/*-----------Коэффициенты из ГОСТ 6651-2009(Медные ТС и ЧЭ, 0,00428°С^-1)---------*/

/*-----------Коэффициенты из ГОСТ 6651-2009(Никелевые ТС и ЧЭ, 0,00617°С^-1)---------*/
#define N100_R0 (double)100.0
#define N500_R0 (double)500.0
#define N1000_R0 (double)1000.0
#define N_A_617 (double)0.0054963
#define N_B_617 (double)0.0000067556
#define N_C_617 (double)0.0000000092004
/*-----------Коэффициенты из ГОСТ 6651-2009(Никелевые ТС и ЧЭ, 0,00617°С^-1)---------*/

//Функция для расчета температуры по сопротивлению термопреобразователей сопротивления (Платиновые ТС и ЧЭ)
double Get_Temperature_PT(double Resistance, double R0, uint8_t Type);

//Функция для расчета сопротивления по температуре термопреобразователей сопротивления (Платиновые ТС и ЧЭ)
double Get_Resistance_PT(double Temperature, double R0, uint8_t Type);

//Функция для расчета температуры по сопротивлению термопреобразователей сопротивления (Медные ТС и ЧЭ)
double Get_Temperature_M(double Resistance, double R0, uint8_t Type);

//Функция для расчета сопротивления по температуре термопреобразователей сопротивления (Медные ТС и ЧЭ)
double Get_Resistance_M(double Temperature, double R0, uint8_t Type);

//Функция для расчета температуры по сопротивлению термопреобразователей сопротивления (Никелевые ТС и ЧЭ)
double Get_Temperature_N(double Resistance, double R0, uint8_t Type);

//Функция для расчета сопротивления по температуре термопреобразователей сопротивления (Никелевые ТС и ЧЭ)
double Get_Resistance_N(double Temperature, double R0, uint8_t Type);

